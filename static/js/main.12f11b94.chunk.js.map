{"version":3,"sources":["logo.svg","components/MovieCard/index.js","components/CustomSlider/index.js","components/MovieDetails/index.js","components/MoviesContainer/index.js","services/tmdb.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","props","className","alt","src","details","poster_path","title","vote_average","credits","cast","sort","actor1","actor2","popularity","slice","map","actor","index","profile_path","name","CustomSlider","settings","dots","infinite","speed","slidesToShow","slidesToScroll","beforeChange","current","next","onChange","movies","movie","onClick","e","MovieDetails","directors","crew","filter","person","job","rating","closeModal","window","history","pushState","setShowModal","showModal","starDimension","starSpacing","starRatedColor","numberOfStars","release_date","split","runtime","overview","type","style","transition","MoviesContainer","api","apikey","BASE_URL","_request","endPoint","qs","api_key","fetch","URLSearchParams","then","res","json","discoverMovies","params","getGenres","getCredits","id","getMovieDetails","tmdb","process","useState","collections","setCollections","page","setPage","selectedMovie","setSelectedMovie","handleClick","a","Promise","allSettled","results","value","movieDetails","console","log","useEffect","genres","promises","genre","language","sort_by","include_adult","include_video","with_genres","result","urlParams","location","search","movieId","get","data","length","concat","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12f11b94.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default function MovieCard(props) {\n    return (\n\n        <article className=\"overflow-hidden rounded-lg shadow-lg\">\n            <img alt=\"Placeholder\" className=\"object-fill h-64 w-full\" src={`https://image.tmdb.org/t/p/w185/${props.details.poster_path}`} />\n            <header className=\"flex justify-between leading-tight p-1 md:p-2\">\n                <h1 className=\"text-lg\">\n                    <p className=\"text-sm\">\n                        {props.details.title}\n                    </p>\n                </h1>\n                <p className=\"flex items-center justify-center text-white text-xs bg-green-500 rounded-full h-6 w-6\">{props.details.vote_average}</p>\n            </header>\n\n            <footer className=\"flex flex-wrap p-1 md:p-2\">\n                {\n                    props.details?.credits?.cast?.sort((actor1, actor2) => actor2.popularity - actor1.popularity)?.slice(0, 2)?.map((actor, index) => (\n                        <p key={index} className=\"flex items-center p-1\">\n                            <img alt=\"Placeholder\" className=\"block rounded-full h-8 w-8 object-cover\" src={`https://image.tmdb.org/t/p/w185/${actor.profile_path}`} />\n                            <p className=\"ml-2 text-xs\">{actor.name}</p>\n                        </p>\n                    ))\n                }\n            </footer>\n\n        </article>\n    );\n}","import Slider from \"react-slick\";\nimport MovieCard from '../MovieCard';\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nexport default function CustomSlider(props) {\n\n    let settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 4,\n        slidesToScroll: 1,\n        beforeChange: (current, next) => props.onChange({ current, next }),\n    };\n    return (\n        <Slider {...settings}>\n            {\n                props.movies?.map((movie, index) => (\n                    <div\n                        key={index}\n                        className=\"my-1 px-1 w-full md:w-1/2 lg:my-4 lg:px-4 lg:w-1/5\"\n                        onClick={(e) => props.onClick(movie)}\n                    >\n                        <MovieCard details={movie}></MovieCard>\n                    </div>\n                ))\n            }\n        </Slider>\n    );\n}","import React from 'react';\nimport StarRatings from 'react-star-ratings';\n\nexport default function MovieDetails(props) {\n    const directors = props.details?.credits?.crew\n        ?.filter(person => person.job === 'Director');\n    const rating = 5 * (props.details.vote_average / 10);\n    const closeModal = () => {\n        window.history.pushState(null, '', '/');\n        props.setShowModal(false);\n    };\n    return (\n        <>\n            {props.showModal ? (\n                <>\n                    <div\n                        className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n                        onClick={closeModal}\n                    >\n                        <div className=\"relative w-auto my-6 mx-auto max-w-4xl\">\n                            <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                                <div className=\"relative p-6 flex-auto\">\n                                    <div className=\"flex\">\n                                        <div className=\"flex-none w-64 h-96 relative\">\n                                            <img src={`https://image.tmdb.org/t/p/w185/${props.details.poster_path}`} alt=\"\" className=\"absolute inset-0 w-full h-full object-cover\" />\n                                        </div>\n                                        <form className=\"flex-auto pl-6\">\n                                            <div className=\"flex flex-wrap pb-2\">\n                                                <h1 className=\"flex-auto text-xl font-semibold\">\n                                                    {props.details.title}\n                                                </h1>\n                                                <div className=\"text-xl font-semibold text-gray-500\">\n                                                    <StarRatings\n                                                        rating={rating}\n                                                        starDimension=\"30px\"\n                                                        starSpacing=\"5px\"\n                                                        starRatedColor=\"#FF9529\"\n                                                        numberOfStars={5}\n                                                        name='rating'\n                                                    />\n                                                    {/* {props.details.vote_average} */}\n                                                </div>\n                                            </div>\n                                            <div className=\"flex flex-wrap border-b border-solid border-gray-300\">\n                                                <p className=\"flex items-center p-1 text-sm text-gray-500\">{props.details.release_date.split('-')[0]} | {props.details.runtime} min |</p>\n                                                {\n                                                    directors?.map((actor, index) => (\n                                                        <p key={index} className=\"flex items-center p-1\">\n                                                            <img alt=\"profile\" className=\"block rounded-full h-8 w-8 object-cover\" src={`https://image.tmdb.org/t/p/w185/${actor.profile_path}`} />\n                                                            <span className=\"ml-2 text-xs\">{actor.name}</span>\n                                                        </p>\n                                                    ))\n                                                }\n                                            </div>\n                                            <div className=\"flex flex-wrap pt-2\">\n                                                <p className=\"text-sm text-gray-500 text-justify\">{props.details.overview}</p>\n                                            </div>\n                                            <div className=\"flex flex-wrap pt-2 items-center\">\n                                                {/* <p className=\"text-sm text-gray-500\">{props.details?.credits?.cast?.map(actor => actor.name)?.join(',')}</p> */}\n                                                <p className=\"w-full py-2 font-semibold\">Cast</p>\n                                                {\n                                                    props.details?.credits?.cast?.sort((actor1, actor2) => actor2.popularity - actor1.popularity)?.slice(0, 2)?.map((actor, index) => (\n                                                        <p key={index} className=\"flex items-center p-1\">\n                                                            <img alt=\"profile\" className=\"block rounded-full h-8 w-8 object-cover\" src={`https://image.tmdb.org/t/p/w185/${actor.profile_path}`} />\n                                                            <p className=\"ml-2 text-xs\">{actor.name}</p>\n                                                        </p>\n                                                    ))\n                                                }\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                                <div className=\"flex items-center justify-end p-2 border-t border-solid border-gray-300 rounded-b\">\n                                    <button\n                                        className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\n                                        type=\"button\"\n                                        style={{ transition: \"all .15s ease\" }}\n                                        onClick={closeModal}\n                                    >\n                                        Close\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                </>\n            ) : null}\n        </>\n    );\n}","import { useState, useEffect } from 'react';\nimport CustomSlider from '../CustomSlider';\nimport MovieDetails from '../MovieDetails';\nimport tmdb from './../../services/tmdb';\nimport './index.scss';\n\nexport default function MoviesContainer(props) {\n    let api = tmdb(process.env.REACT_APP_API_KEY);\n    const [collections, setCollections] = useState([]);\n    const [page, setPage] = useState({});\n    const [showModal, setShowModal] = useState(false);\n    const [selectedMovie, setSelectedMovie] = useState({});\n\n    const handleChange = (e) => {\n        (async () => {\n            if ((collections[e.index].movies.length - e.next) < 10) {\n                //fetch second page and update collections\n                let movies = await api.discoverMovies({\n                    language: 'en-US',\n                    sort_by: 'popularity.desc',\n                    include_adult: false,\n                    include_video: false,\n                    with_genres: e.genre.id,\n                    page: page[e.genre.name] + 1,\n                }).then(movies => movies.results);\n\n                setPage(page => ({ ...page, [e.genre.name]: page[e.genre.name] + 1 }));\n                collections[e.index].movies = collections[e.index].movies.concat(movies);\n                setCollections([...collections]);\n            }\n        })();\n    };\n    const handleClick = async (movie) => {\n        try {\n            let results = await Promise.allSettled([\n                api.getCredits(movie.id),\n                api.getMovieDetails(movie.id)\n            ]);\n\n            let credits = results[0].value;\n            let movieDetails = results[1].value;\n\n            setSelectedMovie({ ...movie, ...movieDetails, credits });\n            window.history.pushState(null, '', `?movieId=${movie.id}`);\n            setShowModal(true);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    useEffect(() => {\n        (async () => {\n            try {\n                let genres = (await api.getGenres()).genres;\n                let promises = genres.map(genre => {\n                    setPage(page => ({ ...page, [genre.name]: 1 }));\n\n                    return api.discoverMovies({\n                        language: 'en-US',\n                        sort_by: 'popularity.desc',\n                        include_adult: false,\n                        include_video: false,\n                        with_genres: genre.id,\n                        page: 1\n                    }).then(movies => ({ genre: genre, movies: movies.results }));\n                });\n\n                let results = await Promise.allSettled(promises);\n\n                setCollections(results.map((result) => result.value));\n\n                const urlParams = new URLSearchParams(window.location.search);\n                const movieId = urlParams.get('movieId');\n                if (movieId) {\n                    handleClick({ id: movieId });\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        })();\n    }, []);\n\n    return (\n        <>\n            {\n                collections.map((data, index) => (\n                    <div className=\"container my-12 mx-auto px-4 md:px-12\" key={index}>\n                        <p className=\"font-bold text-lg\">{data.genre.name}</p>\n                        <div className=\"-mx-1 lg:-mx-4\">\n                            <CustomSlider\n                                key={index}\n                                movies={data.movies}\n                                onClick={handleClick}\n                                onChange={(res) => handleChange({ ...res, genre: data.genre, index })}\n                            />\n                        </div>\n                    </div>\n                ))\n            }\n            <MovieDetails showModal={showModal} details={selectedMovie} setShowModal={setShowModal}></MovieDetails>\n        </>\n    );\n}","export default function TMDB(apikey) {\n    const BASE_URL = 'https://api.themoviedb.org/3';\n    const _request = (endPoint, qs = {}) => {\n        qs.api_key = apikey;\n        return fetch(`${BASE_URL}/${endPoint}?${new URLSearchParams(qs)}`).then(res => res.json());\n    }\n    return {\n        discoverMovies: (params) => _request('discover/movie', params),\n        getGenres: () => _request('genre/movie/list'),\n        getCredits: (id) => _request(`movie/${id}/credits`),\n        getMovieDetails: (id) => _request(`/movie/${id}`),\n    };\n\n};","import logo from './logo.svg';\nimport './App.css';\nimport MoviesContainer from './components/MoviesContainer';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <MoviesContainer  ></MoviesContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}